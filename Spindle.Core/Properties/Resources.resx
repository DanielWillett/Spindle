<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ExceptionGameThread" xml:space="preserve">
    <value>This feature can only be used when on the main thread.</value>
  </data>
  <data name="ExceptionGameThreadContext" xml:space="preserve">
    <value>{0} can only be used when on the main thread.</value>
  </data>
  <data name="ExceptionSpindlePluginSettingsException" xml:space="preserve">
    <value>Plugin is misconfigured.</value>
  </data>
  <data name="ExceptionSpindlePluginSettingsException_LoadTime" xml:space="preserve">
    <value>The value given for LoadTime ({0}) is out of range for SpindlePluginLoadTime.</value>
  </data>
  <data name="LanguageParse_NameRequired" xml:space="preserve">
    <value>DisplayName is a required property for Language.</value>
  </data>
  <data name="LanguageParse_DisplayNameRequired" xml:space="preserve">
    <value>Name is a required property for Language.</value>
  </data>
  <data name="LanguageFileNotFound" xml:space="preserve">
    <value>Unable to find Languages.json or Languages.yml file.</value>
  </data>
  <data name="ExceptionNoPlayerSpawnsAvailable" xml:space="preserve">
    <value>No non-alt player spawns available.</value>
  </data>
  <data name="ExceptionPlayerOffline" xml:space="preserve">
    <value>Player not online: {0}.</value>
  </data>
  <data name="ExceptionBrowserRequestNotHttp" xml:space="preserve">
    <value>URL scheme must be http or https.</value>
  </data>
  <data name="ExceptionSteamIdNotIndividual" xml:space="preserve">
    <value>Steam ID must belong to an Individual account type.</value>
  </data>
  <data name="ExceptionSteamIdNotGameServer" xml:space="preserve">
    <value>Steam ID must belong to a Game Server.</value>
  </data>
  <data name="ExceptionComponentNotFound" xml:space="preserve">
    <value>The component {0} could not be found on {1}.</value>
  </data>
  <data name="LogPlayerComponentFailedToDispose" xml:space="preserve">
    <value>Player component {0} threw an exception trying to dispose on player {1}.</value>
  </data>
  <data name="LogPlayerComponentFailedToCreate" xml:space="preserve">
    <value>Constructor for player component {0} threw an exception for player {1}.</value>
  </data>
  <data name="LogPlayerComponentFailedToInitialize" xml:space="preserve">
    <value>Initialize method for player component {0} threw an exception for player {1}.</value>
  </data>
  <data name="SharedTranslationDictionary_LanguageCodesMismatched" xml:space="preserve">
    <value>Language codes are mismatched.</value>
  </data>
  <data name="SharedTranslationDictionary_ArrayTooShort" xml:space="preserve">
    <value>Array not long enough for {0} elements.</value>
  </data>
  <data name="TranslationsEnumNameDescription" xml:space="preserve">
    <value>This represents a generic name of the set of values.</value>
  </data>
  <data name="ExceptionEnumConverterNotValid" xml:space="preserve">
    <value>Enum converters can not be added later. Use SetEnumStringConverter instead.</value>
  </data>
  <data name="ExceptionConverterInvalidGenericType" xml:space="preserve">
    <value>Converter types can only have one generic argument and it must be the value type being translated.</value>
  </data>
  <data name="TranslateUnsafe_FormattingArgumentMismatchValueTypeNull" xml:space="preserve">
    <value>Formatting argument at index {0} is null and its generic type is a value type!</value>
  </data>
  <data name="TranslateUnsafe_FormattingArgumentMismatch" xml:space="preserve">
    <value>Formatting argument at index {0} is not a type compatable with it's generic type!</value>
  </data>
  <data name="UniTaskUnobservedException" xml:space="preserve">
    <value>UniTask exception not handled correctly.</value>
  </data>
  <data name="UniTaskInjectionHandledByOtherModule" xml:space="preserve">
    <value>UniTask injection was already completed by another module, likely OpenMod.</value>
  </data>
  <data name="UniTaskInjectionSuccess" xml:space="preserve">
    <value>UniTask injection completed successfully by Spindle.</value>
  </data>
  <data name="UniTaskInjectionReflectionFailure" xml:space="preserve">
    <value>Unable to initialize UniTask, check that the version of UniTask.dll is up to date and try redownloading it. Do NOT get it from NuGet, as that verison is not for Unity.</value>
  </data>
  <data name="SpindleLaunchException" xml:space="preserve">
    <value>Error starting Spindle.</value>
  </data>
  <data name="SpindleShutdownException" xml:space="preserve">
    <value>Error shutting Spindle down.</value>
  </data>
  <data name="ExceptionNotValidTranslationCollectionType" xml:space="preserve">
    <value>Type must be a non-abstract subclass of TranslationCollection with a parameterless constructor.</value>
  </data>
</root>