#pragma warning disable CS0618

// Rocket.Unturned
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Environment))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.U))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.UnturnedConsole))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.UnturnedConsoleWriter))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.UnturnedPlayerMovement))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Chat.UnturnedChat))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Commands.CommandAdmin))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Commands.CommandBroadcast))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Commands.CommandCompass))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Commands.CommandEffect))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Commands.CommandExit))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Commands.CommandGod))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Commands.CommandHeal))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Commands.CommandHome))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Commands.CommandI))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Commands.CommandInvestigate))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Commands.CommandMore))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Commands.CommandP))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Commands.CommandRocket))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Commands.CommandTp))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Commands.CommandTphere))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Commands.CommandUnadmin))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Commands.CommandV))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Commands.CommandVanish))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Commands.UnturnedCommandExtensions))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Commands.UnturnedCommands))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Effects.UnturnedEffect))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Enumerations.InventoryGroup))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Events.UnturnedEvents))]
//[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Events.UnturnedEvents.PlayerConnected))]
//[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Events.UnturnedEvents.PlayerDisconnected))]
//[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Events.UnturnedEvents.OnPlayerGetDamage))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Events.UnturnedPlayerEvents))]
//[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Events.UnturnedPlayerEvents.PlayerChatted))]
//[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Events.UnturnedPlayerEvents.PlayerDead))]
//[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Events.UnturnedPlayerEvents.PlayerDeath))]
//[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Events.UnturnedPlayerEvents.PlayerGesture))]
//[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Events.UnturnedPlayerEvents.PlayerInventoryAdded))]
//[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Events.UnturnedPlayerEvents.PlayerInventoryRemoved))]
//[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Events.UnturnedPlayerEvents.PlayerInventoryResized))]
//[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Events.UnturnedPlayerEvents.PlayerInventoryUpdated))]
//[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Events.UnturnedPlayerEvents.PlayerRevive))]
//[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Events.UnturnedPlayerEvents.PlayerUpdateBleeding))]
//[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Events.UnturnedPlayerEvents.PlayerUpdateBroken))]
//[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Events.UnturnedPlayerEvents.PlayerUpdateExperience))]
//[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Events.UnturnedPlayerEvents.PlayerUpdateFood))]
//[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Events.UnturnedPlayerEvents.PlayerUpdateGesture))]
//[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Events.UnturnedPlayerEvents.PlayerUpdateHealth))]
//[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Events.UnturnedPlayerEvents.PlayerUpdateLife))]
//[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Events.UnturnedPlayerEvents.PlayerUpdatePosition))]
//[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Events.UnturnedPlayerEvents.PlayerUpdateStamina))]
//[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Events.UnturnedPlayerEvents.PlayerUpdateStance))]
//[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Events.UnturnedPlayerEvents.PlayerUpdateStat))]
//[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Events.UnturnedPlayerEvents.PlayerUpdateVirus))]
//[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Events.UnturnedPlayerEvents.PlayerUpdateWater))]
//[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Events.UnturnedPlayerEvents.PlayerWear))]
//[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Events.UnturnedPlayerEvents.Wearables))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Extensions.SteamPlayerExtension))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Items.Attachment))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Items.UnturnedItems))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Permissions.UnturnedPermissions))]
//[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Permissions.UnturnedPermissions.JoinRequested))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Player.PlayerIsConsoleException))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Player.UnturnedPlayer))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Player.UnturnedPlayerComponent))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Player.UnturnedPlayerFeatures))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Plugins.PluginUnturnedPlayerComponentManager))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Serialisation.AutomaticSaveSettings))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Serialisation.RocketModObservatorySettings))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Serialisation.UnturnedSettings))]
[assembly: TypeForwardedTo(typeof(Rocket.Unturned.Skills.UnturnedSkill))]